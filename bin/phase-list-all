#!/usr/bin/env python3

import sys
from pathlib import Path

# Add project root to sys.path
project_root = Path(__file__).resolve().parent.parent
sys.path.insert(0, str(project_root))

from afs_fastapi.core.todos_manager import get_all_phases  # noqa: E402


def display_all_phases():
    phases = get_all_phases()

    if not phases:
        print("No development phases found.")
        print("Use './bin/phase-start' to start a new phase.")
        return

    print("=== AFS FastAPI All Development Phases ===")
    print()

    sorted_phases = sorted(phases, key=lambda x: x.get('date_started', ''), reverse=True)

    for phase in sorted_phases:
        phase_id = phase.get('id', 'Unknown ID')
        phase_name = phase.get('name', 'Unknown Phase')
        status = phase.get('status', 'unknown')
        started_at = phase.get('date_started', 'Unknown')
        completed_at = phase.get('date_completed', 'N/A')
        strategic_id = phase.get('strategic_goal_id', 'N/A')

        status_icon = {
            'active': '🚀',
            'paused': '⏸️',
            'completed': '✅',
            'unknown': '❓'
        }.get(status, '❓')

        print(f'{status_icon} {phase_name}')
        print(f'   ID: {phase_id}')
        print(f'   Status: {status.capitalize()}')
        if started_at and 'T' in started_at:
            print(f'   Started: {started_at[:10]} {started_at[11:16]} UTC')
        if status == 'completed' and completed_at and 'T' in completed_at:
            print(f'   Completed: {completed_at[:10]} {completed_at[11:16]} UTC')
        
        print(f'   Strategic Alignment: {strategic_id}')

        tasks = phase.get('tasks', [])
        total_tasks = len(tasks)
        if total_tasks > 0:
            completed_tasks = len([t for t in tasks if t['status'] == 'completed'])
            progress_percentage = (completed_tasks / total_tasks * 100) if total_tasks > 0 else 0
            print(f'   Tasks: {completed_tasks}/{total_tasks} completed ({progress_percentage:.1f}%)')
        else:
            print('   Tasks: No tasks defined.')
        print()

    print('Use "./bin/phase-activate <ID>" to set a phase as active.')
    print('Use "./bin/phase-status" for detailed status of the active phase.')

if __name__ == "__main__":
    display_all_phases()
