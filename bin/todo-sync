#!/usr/bin/env python3
import json
import os
import sys
from datetime import datetime


def main():
    # Add project root to sys.path
    project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    sys.path.insert(0, project_root)

    from todowrite.manager import get_active_items, get_goals, load_todos

    todos_data = load_todos()
    goals = get_goals()
    active_items = get_active_items(todos_data)

    strategic_summary = {"total": 0, "completed": 0, "pending": 0, "progress_percentage": 0}
    if goals:
        total_goals = len(goals)
        completed_goals = len([g for g in goals if g["status"] == "done"])
        pending_goals = total_goals - completed_goals
        strategic_summary["total"] = total_goals
        strategic_summary["completed"] = completed_goals
        strategic_summary["pending"] = pending_goals
        if total_goals > 0:
            strategic_summary["progress_percentage"] = (completed_goals / total_goals) * 100

    phase_summary = {
        "active_phase": "None",
        "phase_status": "none",
        "total_steps": 0,
        "completed_steps": 0,
        "pending_steps": 0,
        "progress_percentage": 0,
    }
    active_phase = active_items.get("phase")
    if active_phase:
        phase_summary["active_phase"] = active_phase["title"]
        phase_summary["phase_status"] = active_phase["status"]
        steps = active_phase.get("steps", [])
        total_steps = len(steps)
        completed_steps = len([s for s in steps if s["status"] == "done"])
        pending_steps = total_steps - completed_steps
        phase_summary["total_steps"] = total_steps
        phase_summary["completed_steps"] = completed_steps
        phase_summary["pending_steps"] = pending_steps
        if total_steps > 0:
            phase_summary["progress_percentage"] = (completed_steps / total_steps) * 100

    sync_state = {
        "last_sync": datetime.now().isoformat(),
        "strategic_summary": strategic_summary,
        "phase_summary": phase_summary,
        "session_context": {
            "development_momentum": (
                "active" if active_phase and active_phase["status"] == "in_progress" else "planning"
            ),
            "next_priority": (
                "strategic"
                if not active_phase or active_phase["status"] != "in_progress"
                else "phase"
            ),
        },
    }

    sync_state_file = os.path.join(project_root, ".claude", "todo_sync_state.json")
    with open(sync_state_file, "w") as f:
        json.dump(sync_state, f, indent=2)

    if "--silent" not in sys.argv:
        print("âœ“ TODO state synchronized")
        print(
            f'  Strategic: {strategic_summary["completed"]}/{strategic_summary["total"]} ({strategic_summary["progress_percentage"]:.1f}%)'
        )
        if phase_summary["active_phase"] != "None":
            print(
                f'  Phase: {phase_summary["completed_steps"]}/{phase_summary["total_steps"]} ({phase_summary["progress_percentage"]:.1f}%)'
            )
        print(f'  Synced: {sync_state["last_sync"]}')


if __name__ == "__main__":
    main()
