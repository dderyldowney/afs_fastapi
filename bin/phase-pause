#!/bin/bash

# phase-pause: Pause the current development phase
# Usage: ./bin/phase-pause

set -euo pipefail

# Ensure we're in the project root
if [[ ! -f ".claude/DUAL_TODO_SYSTEM.md" ]]; then
    echo "Error: Must be run from AFS FastAPI project root directory"
    exit 1
fi

PHASE_FILE=".claude/phase_todos.json"

# Get current timestamp in ISO format
ISO_TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)

# Pause the current phase
python3 -c "
import json
import sys
from datetime import datetime

PHASE_FILE = '$PHASE_FILE'
ISO_TIMESTAMP = '$ISO_TIMESTAMP'

# Read all phases data
try:
    with open(PHASE_FILE, 'r') as f:
        all_phases_data = json.load(f)
except FileNotFoundError:
    print('Error: No phase file found.')
    sys.exit(1)

active_phase_id = all_phases_data.get('active_phase_id')
if not active_phase_id:
    print('Error: No active development phase found to pause.')
    print('Use \"./bin/phase-start\" to start a new phase or \"./bin/phase-activate <ID>\" to activate an existing one.')
    sys.exit(1)

current_phase = all_phases_data['phases'].get(active_phase_id)
if not current_phase:
    print(f'Error: Active phase with ID {active_phase_id} not found in phase file.')
    sys.exit(1)

if current_phase.get('status') == 'paused':
    print('Info: Phase is already paused.')
    print(f'  Phase: {current_phase.get('name', 'Unknown Phase')}')
    sys.exit(0)

if current_phase.get('status') != 'active':
    print('Error: No active development phase found to pause.')
    print('Current phase status: ' + current_phase.get('status', 'none'))
    print('Use \"./bin/phase-start\" to start a new phase or \"./bin/phase-resume\" to resume a paused one.')
    sys.exit(1)

# Mark as paused
current_phase['status'] = 'paused'
current_phase['paused_at'] = ISO_TIMESTAMP
current_phase['metadata']['last_updated'] = ISO_TIMESTAMP

# Write back to file
with open(PHASE_FILE, 'w') as f:
    json.dump(all_phases_data, f, indent=2)

print('âœ“ Development phase paused successfully!')
print(f'  Phase: {current_phase.get('name', 'Unknown Phase')}')
print(f'  Paused at: {current_phase['paused_at']}')
"

echo ""
echo "Use './bin/phase-status' to view phase status."
echo "Use './bin/phase-resume' to resume the phase."
# Auto-sync TODO state for session persistence
./bin/todo-sync --silent 2>/dev/null || true

echo ""
echo "Use './bin/phase-status' to view phase status."
echo "Use './bin/phase-resume' to resume the phase."
# Auto-sync TODO state for session persistence
./bin/todo-sync --silent 2>/dev/null || true
