#!/bin/bash

# phase-resume: Resume a paused development phase
# Usage: ./bin/phase-resume

set -euo pipefail

# Ensure we're in the project root
if [[ ! -f ".claude/DUAL_TODO_SYSTEM.md" ]]; then
    echo "Error: Must be run from AFS FastAPI project root directory"
    exit 1
fi

PHASE_FILE=".claude/phase_todos.json"

# Check if phase file exists
if [[ ! -f "$PHASE_FILE" ]]; then
    echo "Error: No development phase found."
    echo "Use './bin/phase-start "Phase Name"' to start a new phase."
    exit 1
fi

# Get current timestamp in ISO format
ISO_TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)

# Resume the paused phase
python3 -c "
import json
import sys
from datetime import datetime

# Read current phase data
try:
    with open('$PHASE_FILE', 'r') as f:
        data = json.load(f)
except FileNotFoundError:
    print('Error: No phase file found.')
    sys.exit(1)

current_phase = data.get('current_phase', {})

if current_phase.get('status') == 'active':
    print('Info: Phase is already active.')
    print(f'  Phase: {current_phase.get('name', 'Unknown Phase')}')
    sys.exit(0)

if current_phase.get('status') != 'paused':
    print('Error: No paused development phase found to resume.')
    print('Current phase status: ' + current_phase.get('status', 'none'))
    print('Use "./bin/phase-start" to start a new phase or "./bin/phase-pause" to pause an active one.')
    sys.exit(1)

# Mark as active
current_phase['status'] = 'active'
current_phase['resumed_at'] = '$ISO_TIMESTAMP' # Optional: track resume time
data['metadata']['last_updated'] = '$ISO_TIMESTAMP'

# Write back to file
with open('$PHASE_FILE', 'w') as f:
    json.dump(data, f, indent=2)

print('âœ“ Development phase resumed successfully!')
print(f'  Phase: {current_phase.get('name', 'Unknown Phase')}')
print(f'  Resumed at: {current_phase['resumed_at']}')
"

echo ""
echo "Use './bin/phase-status' to view phase status."
echo "Use './bin/phase-add' to add steps or './bin/phase-complete' to complete steps."
# Auto-sync TODO state for session persistence
./bin/todo-sync --silent 2>/dev/null || true
