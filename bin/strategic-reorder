#!/usr/bin/env python3
# type: ignore

import argparse
import sys
from pathlib import Path

# Add project root to sys.path
project_root = Path(__file__).resolve().parent.parent
sys.path.insert(0, str(project_root))

from todowrite.app import ToDoWrite  # noqa: E402
from todowrite.db.models import Node  # noqa: E402


def main():
    # Initialize ToDoWrite app instance
    app = ToDoWrite()
    parser = argparse.ArgumentParser(description="Reorder a strategic goal.")
    parser.add_argument("goal_id", type=str, help="The ID of the strategic goal to reorder.")
    parser.add_argument("new_position", type=int, help="The new position of the strategic goal.")
    args = parser.parse_args()

    todos = app.load_todos()
    goals = todos["goals"]

    goal_to_move = None
    for i, goal in enumerate(goals):
        if goal["id"] == args.goal_id:
            goal_to_move = goals.pop(i)
            break

    if not goal_to_move:
        print(f"Error: Goal with ID '{args.goal_id}' not found.")
        sys.exit(1)

    new_position = args.new_position - 1  # Adjust for 0-based indexing
    if new_position < 0:
        new_position = 0
    if new_position > len(goals):
        new_position = len(goals)

    goals.insert(new_position, goal_to_move)
    # DEPRECATED: save_todos(todos)  # TODO: Update to new API

    print(f"âœ“ Successfully moved goal '{args.goal_id}' to position {args.new_position}.")


if __name__ == "__main__":
    main()
