# type: ignore
#!/usr/bin/env python3

import json
import sys
from datetime import datetime
from pathlib import Path

# Add project root to sys.path
project_root = Path(__file__).resolve().parent.parent
sys.path.insert(0, str(project_root))

from afs_fastapi.core.todos_manager import get_active_items, load_todos, save_todos, GoalItem  # noqa: E402


def main():
    print("ðŸ’¾ AFS FastAPI Session State Snapshot")
    print("======================================")
    print()

    # Gather data
    todos_data = load_todos()
    goals = todos_data["goals"]
    active_items = get_active_items()
    active_phase = active_items["phase"]
    
    # Calculate counts for strategic goals
    total_goals = len(goals)
    pending_goals = len([g for g in goals if g["status"] == "planned" or g["status"] == "in_progress"])
    completed_goals = len([g for g in goals if g["status"] == "done"])

    # Calculate counts for active phase tasks
    total_active_phase_tasks = 0
    completed_active_phase_tasks = 0
    if active_phase:
        for step in active_phase.get("steps", []):
            for task in step.get("tasks", []):
                total_active_phase_tasks += 1
                if task["status"] == "done":
                    completed_active_phase_tasks += 1

    # Create summary content
    summary = f"""
# AFS FastAPI Session Summary

## TODOs Summary

### Strategic Goals
- Total: {total_goals}
- Pending: {pending_goals}
- Completed: {completed_goals}

### Active Phase
- Name: {active_phase['title'] if active_phase else 'None'}
- Status: {completed_active_phase_tasks}/{total_active_phase_tasks if total_active_phase_tasks > 0 else 'N/A'} tasks completed
"""

    # Save summary to file
    summary_file = project_root / "SESSION_SUMMARY.md"
    with open(summary_file, 'w') as f:
        f.write(summary)

    print(f"âœ… Session summary saved to {summary_file}")
    print()

if __name__ == "__main__":
    main()