Feat: Implement circuit breaker for CAN messages using pybreaker

This commit introduces a circuit breaker pattern for CAN message transmission, enhancing network resilience by preventing continuous attempts to communicate over a failing CAN bus.

Key changes include:
- Added `pybreaker` as a project dependency.
- Modified `afs_fastapi/equipment/can_interface.py` to:
    - Import `CircuitBreaker` and `CircuitBreakerError` from `pybreaker`.
    - Initialize a `CircuitBreaker` instance in the `CanBusManager` constructor with a `fail_max` of 5 and `reset_timeout` of 60 seconds, excluding `can.CanError` to allow `tenacity` to handle initial retries.
    - Wrapped the `send_reliable_message` method with the circuit breaker, so that if the circuit is open, messages are not sent, and a `CircuitBreakerError` is caught.
    - Added logic to close the circuit on successful CAN bus connection and open it on connection/disconnection failures.

This completes the second part of the Enhanced ISOBUS Messaging chunk, providing graceful degradation for CAN communication.